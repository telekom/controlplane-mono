name: go-build-test
on:
  push:
    branches:
      - "main"
      - "feature/**"
      - "feat/**"
      - "release/**"
      - "dependabot/**"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

env:
  GO_VERSION: stable

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # pin@5.5.0
        with:
          go-version: ${{ env.GO_VERSION }}
      - id: set-modules
        run: echo "modules=$(go list -m -json | jq -s '.' | jq -c '[.[].Dir]')" >> $GITHUB_OUTPUT

  build-test:
    name: build-test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # run all tests even if one fails
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v4.2.2

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # pin@5.5.0
        with:
          go-version-file: ${{ matrix.modules }}/go.mod

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/.go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2

      - name: Build and test subproject
        run: make test
        working-directory: ${{ matrix.modules }}
        env:
          ENVTEST_K8S_VERSION: "1.31.0"

      - name: Upload test log
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # pin@v4.6.2
        if: always()
        with:
          name: test-log-${{ matrix.modules }}
          path: /tmp/gotest.log
          if-no-files-found: error